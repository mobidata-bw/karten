import{a as d,l as y,i as R,b as z,c as A,d as G}from"./addControlLayers-BGkVs-fQ.js";import{s as M,c as V,i as h,j as S,p as D}from"./popupContent-Ddl4fq-s.js";import{a as F,s as $,c as O,d as q,e as x,f as I,g as j,h as U,i as W,j as Z,k as H,m as J,p as N}from"./popupContent-C0nE_Uty.js";import{s as K,l as m,p as Q}from"./popupContent-DhxkQdf0.js";import{s as X,l as C,p as Y}from"./popupContent-XB6Eld66.js";import{s as _,a as ee,b as a,l as f,c as g,d as b}from"./layers-HeZuYLBu.js";import{s as se,l as v,p as ae}from"./popupContent-BPb1lGIe.js";import{s as re,l as k,p as oe}from"./popupContent-D8B8Pcov.js";import{s as ie,l as L,p as te}from"./popupContent-Dr75bN8L.js";import{s as ne,a as ce,b as le,c as ue,l as P,p as pe}from"./popupContent-CkdUIXoQ.js";import{p as de,a as ye,b as he}from"./popupContent-BcvO7tfT.js";import{p as o}from"./popups-BTqKEaMR.js";import{w}from"./wms-VdnY4O7i.js";let B;function Se(s){const l={collapsed:!1,layers:d(n,"Integrationsplattform","group")};s.addControl(new y(l),"top-right");const r={collapsed:!1,directoriesCollapsed:!0,layers:d(c,"Weitere Datenprofile","group")};B=new y(r),s.addControl(B,"top-right");const e=document.querySelectorAll("label.mgl-layerControlGroupHeading");function u(i,p=!1){i.parentElement.querySelectorAll("div.checkbox").forEach(t=>{const E=t.querySelector('input[type="checkbox"]').id;s.getLayoutProperty(E,"visibility")==="visible"?p?t.classList.add("hiddenGroupLayers"):t.classList.remove("hiddenGroupLayers"):p?t.classList.remove("hiddenGroupLayers"):t.classList.add("hiddenGroupLayers")})}e.forEach(i=>{u(i,!1),i.addEventListener("click",()=>{u(i,!0)})})}let T,n,c;window.addEventListener("DOMContentLoaded",()=>{document.title="MobiData BW® - Gebündelte Daten";const s=R();z(s),s.on("load",()=>{[{id:"sourceParkApiCar",source:M},{id:"sourceParkApiBicycle",source:V},{id:"sourceSharingVehicles",source:F},{id:"sourceSharingStations",source:$},{id:"sourceChargePoints",source:K},{id:"sourceRadvis",source:X},{id:"sourceTransitStops",source:_},{id:"sourceTransitStations",source:ee},{id:a[0].id,source:a[0]},{id:a[1].id,source:a[1]},{id:a[2].id,source:a[2]},{id:a[3].id,source:a[3]},{id:a[4].id,source:a[4]},{id:a[5].id,source:a[5]},{id:"sourceRoadworks",source:se},{id:"sourceCountCar",source:re},{id:"sourceCountBicycle",source:ie},{id:"sourceFootway",source:ne},{id:"sourceMarked",source:ce},{id:"sourceUncontrolled",source:le},{id:"sourceZebra",source:ue}].forEach(e=>A(s,e));const r=[...O,...q,...x,...I,...j,...U,...W,...Z,...H,...J];n=[...h,...S,...r.filter(e=>e.id.includes("StationsNoRealtimeData")).map(e=>({...e,label:"Station: Echtzeitdaten nicht vorhanden"})),...r.filter(e=>e.id.includes("StationsOutdatedRealtimeData")).map(e=>({...e,label:"Station: Echtzeitdaten älter 30 Minuten"})),...r.filter(e=>e.id.includes("StationsOccupied")).map(e=>({...e,label:"Station: Fahrzeuge nicht vorhanden"})),...r.filter(e=>e.id.includes("StationsFree")).map(e=>({...e,label:"Station: Fahrzeuge verfügbar"})),...r.filter(e=>e.id.includes("VehiclesOutdatedRealtimeData")).map(e=>({...e,label:"Fahrzeug: Echtzeitdaten älter 30 Minuten"})),...r.filter(e=>e.id.includes("VehiclesRealtimeData")).map(e=>({...e,label:"Fahrzeug: verfügbar"})),...m,...C,...f,...g,...b,...v],c=[...k,...L,...P],T=[...n,...c],T.forEach(e=>{e.source!="sourceParkApiCar"?e.visibility="none":e.visibility="visible",G(s,e)}),Se(s),o(s,[...h,...S],D),o(s,r,N),o(s,m,Q),o(s,C,Y),o(s,f,de),o(s,g,ye),o(s,k,oe),o(s,L,te),o(s,P,pe),w(s,b,he),w(s,v,ae)})});export{B as c};
