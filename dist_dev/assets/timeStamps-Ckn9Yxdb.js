function l(c={}){const i=new URLSearchParams(window.location.search),n=c.purpose??i.get("purpose"),o=c.parking??i.get("parking"),s=c.parkingObject??i.get("parking_object"),p=c.formFactor??i.get("form_factor");let e={},t,r=!0,a;switch(n){case"car":switch(e={source:"sourceParkApiCar",sourceLayer:"park-api_car",group:"Parkplätze"},a="Gebündelte Parkplätze",t="Car",o){case"disabled":e.group="Behindertenparkplätze",r=["any",[">",["get","capacity_disabled"],0],["==",["get","restriction_type"],"DISABLED"]],a="Gebündelte Behindertenparkplätze";break;case"buildings":e.group="Parkplätze und Parkbauten",r=["any",["!=",["get","type"],"ON_STREET"],["!",["has","type"]]],a="Gebündelte Parkplätze und Parkbauten";break;case"on_street":e.group="Straßen-Parkplätze",r=["any",["==",["get","type"],"ON_STREET"],["!",["has","type"]]],a="Gebündelte Straßen-Parkplätze";break}switch(s){case"site":e.group="Parksteifen oder Parkbau",r=["==",["get","parking_object"],"site"],a="Parkstreifen und Parkbauten";break;case"spot":e.group="Einzelparkplatz",r=["==",["get","parking_object"],"spot"],a="Einzelparkplatz";break}break;case"bicycle":e={source:"sourceParkApiBicycle",sourceLayer:"park-api_bicycle",group:"Fahrradabstellanlagen"},r=["==",["get","purpose"],"BIKE"],t="Bicycle",a="Gebündelte Fahrradabstellanlagen";break;case"item":e={source:"sourceParkApiBicycle",sourceLayer:"park-api_bicycle",group:"Schließfächer an Fahrradabstellanlagen"},r=["==",["get","purpose"],"ITEM"],t="Item",a="Schließfächer an Fahrradabstellanlagen";break}switch(p){case"car":e.group="Carsharing",r="car",a="Legende",t="Car";break;case"bicycle":e.group="Bikesharing",r="bicycle",t="Bicycle",a="Legende";break;case"cargo_bicycle":e.group="Lastenrad-Sharing",r="cargo_bicycle",t="CargoBicycle",a="Legende";break;case"scooter":e.group="E-Scooter-Sharing",r="scooter",t="Scooter",a="Legende";break;case"moped":e.group="E-Kleinkraftrad-Sharing",r="moped",t="Moped",a="Legende";break}return{purpose:n,formFactor:p,layerGroup:e,id:t,layerFilter:r,controlLayersTitle:a}}function g(c){const i=c.replace(" ","T").replace(/(\.\d{3})\d+/,"$1")+"Z",n=new Date(i),o=n.toLocaleDateString("de-DE",{day:"2-digit",month:"2-digit",year:"2-digit"}),s=n.toLocaleTimeString("de-DE",{hour:"2-digit",minute:"2-digit",second:"2-digit"});return{date:o,time:s}}export{g as t,l as u};
