import{a as p,l as u,i as D,b as F,c as $,d as L}from"./addControlLayers-BfnYechJ.js";import{s as M,l as d}from"./layers-0TNyiCOC.js";import{s as V,l as m}from"./layers-DT5rKYTN.js";import{s as I,l as y}from"./layers-BZs6D7S6.js";import{s as G,a as U,p as t}from"./popupContent-BgJfJtVh.js";import{l as f}from"./layers-Bb_vKw6C.js";import{l as C,a as S}from"./layers-B_1AkC1W.js";import{l as g}from"./layers-D2ZvvQH2.js";import{l as h}from"./layers-CxOZW4RS.js";import{s as W,l as b,p as Z}from"./popupContent-D3SJb8PT.js";import{s as x,l as k,p as J}from"./popupContent-Cw57cDHP.js";import{s as N,a as _,b as r,l as P,c as B,d as v}from"./layers-HeZuYLBu.js";import{s as j,l as w,p as q}from"./popupContent-DzhTbagr.js";import{s as H,l as z,p as K}from"./popupContent-D1jhYF4y.js";import{s as Q,l as T,p as X}from"./popupContent-BVxPR350.js";import{s as Y,a as ss,b as es,c as as,l as A,p as rs}from"./popupContent-DmCGwxIx.js";import{p as i}from"./popupContent-DMBdZFtU.js";import{p as os,a as ts,b as is}from"./popupContent-CLUUlb5N.js";import{p as a}from"./popups-T-ui2lUX.js";import{w as O}from"./wms-PufzXigc.js";let R;function ns(e){const l={collapsed:!1,layers:p(n,"Integrationsplattform","group")};e.addControl(new u(l),"top-right");const o={collapsed:!1,layers:p(c,"Weitere Datensätze","group")};R=new u(o),e.addControl(R,"top-right"),document.getElementById("Weitere_Datensätze").parentElement.classList.add("config2")}let E,n,c;window.addEventListener("DOMContentLoaded",()=>{const e=D();F(e),e.on("load",()=>{[{id:"sourceParkApiCarBuildings",source:M},{id:"sourceParkApiCarOnStreet",source:V},{id:"sourceParkApiBicycle",source:I},{id:"sourceSharingVehicles",source:G},{id:"sourceSharingStations",source:U},{id:"sourceChargePoints",source:W},{id:"sourceRadvis",source:x},{id:"sourceTransitStops",source:N},{id:"sourceTransitStations",source:_},{id:r[0].id,source:r[0]},{id:r[1].id,source:r[1]},{id:r[2].id,source:r[2]},{id:r[3].id,source:r[3]},{id:r[4].id,source:r[4]},{id:r[5].id,source:r[5]},{id:"sourceRoadworks",source:j},{id:"sourceCountCar",source:H},{id:"sourceCountBicycle",source:Q},{id:"sourceFootway",source:Y},{id:"sourceMarked",source:ss},{id:"sourceUncontrolled",source:es},{id:"sourceZebra",source:as}].forEach(s=>$(e,s));const o=[...f,...C,...g,...S,...h];n=[...d,...m,...y,...o.filter(s=>s.id.includes("StationsNoRealtimeData")).map(s=>({...s,label:"Station ohne Echtzeitdaten"})),...o.filter(s=>s.id.includes("StationsOutdatedRealtimeData")).map(s=>({...s,label:"Station mit veralteten Echtzeitdaten"})),...o.filter(s=>s.id.includes("StationsOccupied")).map(s=>({...s,label:"Station ohne verfügbare Fahrzeuge"})),...o.filter(s=>s.id.includes("StationsFree")).map(s=>({...s,label:"Station mit verfügbaren Fahrzeugen"})),...o.filter(s=>s.id.includes("VehiclesOutdatedRealtimeData")).map(s=>({...s,label:"Fahrzeug mit veralteten Echtzeitdaten"})),...o.filter(s=>s.id.includes("VehiclesRealtimeData")).map(s=>({...s,label:"Fahrzeug verfügbar"})),...b,...k,...P,...B,...v,...w],c=[...z,...T,...A],E=[...n,...c],E.forEach(s=>{s.source!="sourceParkApiCarBuildings"?s.visibility="none":s.visibility="visible",L(e,s)}),ns(e),a(e,d,i),a(e,m,i),a(e,y,i),a(e,f,t),a(e,C,t),a(e,g,t),a(e,S,t),a(e,h,t),a(e,b,Z),a(e,k,J),a(e,P,os),a(e,B,ts),a(e,z,K),a(e,T,X),a(e,A,rs),O(e,v,is),O(e,w,q)})});export{R as c};
