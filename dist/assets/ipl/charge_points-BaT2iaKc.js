import{a as B,l as D,p as E,i as F,b as G,g as M,m as W,c as O,d as l,s as L,f as P,e as x,h as H,j as A,k as N}from"../global-B-NOk-Bp.js";window.PUBLIC_PATH="/karten_vite/";const U={layer:"MobiData-BW:charge_points",style:"MobiData-BW:mdbw_charge_points_dynamic",bounds:[5.2,47.2,15.8,55.7]},m={source:"sourceChargePoints",sourceLayer:"charge_points",group:"E-Ladesäulen",circleRadius:["interpolate",["linear"],["zoom"],6,4,12,5]},I=[{id:"chargePointsPower_Normal",label:"Ladesäule",subGroup:"Ladeleistung",filter:["<=",["get","max_electric_power"],22e3],color:"#08a4a7",...m},{id:"chargePointsPower_Fast",label:"Schnellladesäule",subGroup:"Ladeleistung",filter:[">",["get","max_electric_power"],22e3],color:"#91FFFF",...m},{id:"chargePointsPower_Unknown",label:"Unbekannte Ladeleistung",subGroup:"Ladeleistung",filter:["==",["get","max_electric_power"],null],color:"#cacaca",...m}],R=[{id:"chargePointsDynamic_Static",label:"Ohne Echtzeitinformationen",subGroup:"Belegung",filter:["!=",["get","chargepoint_static_count"],0],color:"#615fdf",visibility:"none",...m},{id:"chargePointsDynamic_Realtime",label:"Mit Echtzeitinformationen",subGroup:"Belegung",filter:["==",["get","chargepoint_static_count"],0],color:"#dfab27",visibility:"none",...m}];function $(a){const o={collapsed:!1,layers:B(_,"Gebündelte E-Ladesäulen")},e=new D(o);e._exclusiveAllGroups=!0,a.addControl(e,"top-right")}function j(a){const o=document.querySelector("#canvas-"+a.id);if(o){const e=o.getContext("2d"),u=a.chargepoint_static_count+a.chargepoint_unknown_count,C=a.chargepoint_available_count,p=a.chargepoint_charging_count,s=a.chargepoint_inoperative_count+a.chargepoint_outoforder_count,n=[u+C+p+s,u,C,p,s];let c=0;for(let t in n)c<n[t]&&(c=n[t]);const i=o.height,d=o.width,w=15,b=4,r=i-w,y=1.5,T=i-w-y,v=d/5.2,g=(r-12)/c;e.beginPath(),e.moveTo(1.5,0),e.lineWidth=y,e.lineTo(1.5,r),e.lineTo(d,r),e.stroke();for(let t in n){const z=["#006eaf","#ffcc00","#5ce75c","#8B0000","#3a4044"],f=["gesamt","unbekannt","verfügbar","belegt","nicht nutzbar"];e.fillStyle=z[t],e.fillRect(3+t*v+1*t,T,v,-n[t]*g),e.font="11px, Arial",e.fillStyle="black",t==0?(e.fillText(n[t],28,r-b-n[t]*g),e.fillText(f[t],13,i-2)):t==1?(e.fillText(n[t],87,r-b-n[t]*g),e.fillText(f[t],66,i-2)):t==2?(e.fillText(n[t],146,r-b-n[t]*g),e.fillText(f[t],127,i-2)):t==3?(e.fillText(n[t],205,r-b-n[t]*g),e.fillText(f[t],194,i-2)):t==4&&(e.fillText(n[t],264,r-b-n[t]*g),e.fillText(f[t],238,i-2))}}}function q(a){const o=a.id,e=a.source,u=a.name,C=a.address,p=a.max_electric_power,s=a.operator_name;let h=new Map;h={bnetza:"Bundesnetzagentur",bnetza_api:"Bundesnetzagentur",chargecloud_stuttgart:"Stadtwerke Stuttgart",chargecloud_pforzheim:"Stadtwerke Pforzheim",ochp_albwerk:"AlbWerk",heilbronn_neckarbogen:"Stadtwerke Heilbronn",opendata_swiss:"Open-Data-Plattform Schweiz"};let n="",c="";for(let d in h)e==d&&(n+=E(h[d]),c+=`<td class="attContent">${h[d]}</td>`);const i="<table>                <tr>"+n+'<th class="title">'+C+'</th>                </tr>            </table><br><table>                <tr>                    <td class="att">Datengeber</td>'+c+"</tr>"+(s==null||s==""?"":'<tr>        <td class="att">Betreiber</td>        <td class="attContent">'+s+"</td>        </tr>")+(u==null?"":'<tr>            <td class="att">Name</td>            <td class="attContent">'+u+"</td>            </tr>")+(p==null?"":'<tr>                <td class="att">Max. Ladeleistung</td>                <td class="attContent">'+(p/1e3).toLocaleString("de-DE")+"kW</td>            </tr>")+'</table>            <br>            <div class="title title2">Belegung Ladepunkte</div>            <br>            <table>                <tr>                    <td><canvas id="canvas-'+o+'" width="300" height="100" /></td>                </tr>            </table><table>                <tr>                    <td class="attContentLink"><a href="https://'+F+".mobidata-bw.de/ocpdb/api/public/v1/locations/"+o+'" target="_blank">&#10149 Open ChargePoint DataBase<a></td>                </tr>            </table>';return setTimeout(()=>{j(a)},0),i}let _;const k=[],S=[];window.addEventListener("DOMContentLoaded",()=>{G(l,{basemapSources:k,basemapLayers:S}),M(l),W(l),O(l),l.on("load",()=>{l.addSource("shape",L),l.addLayer(P),l.addLayer(x);const a=[{id:"sourceChargePoints",source:U}];a.forEach(o=>H(l,o)),_=[...I,...R],_.forEach(o=>A(l,o)),$(l),k.push({id:"shape",source:L},...a),S.push(P,x,..._),N(l,_,q)})});
