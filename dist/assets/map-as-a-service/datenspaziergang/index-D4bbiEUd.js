import{n as g,a as y,l as h,g as C,m as S,f,c as b,d as j,e as i}from"../../addControlLayers-D-bF3CN8.js";import{s as k,a as c,p as L}from"../../popupContent-BoglU8IR.js";import{s as P,p}from"../../popupContent-DeiE91bD.js";import{s as v,l}from"../../layers-CkjZjdij.js";import{s as w,l as u}from"../../layers-FNUm8Eh8.js";import{s as z,l as t,p as B}from"../../popupContent-Dixy2POx.js";import{s as A,l as R}from"../../layers-B7g0eWnI.js";import{p as _}from"../../popupContent-BX7s7SnK.js";import{b as D}from"../../layerSwitcherControl-BS2fzorf.js";import{p as s}from"../../popups-BczisqvO.js";import"../../popupImages-y3F2CXYh.js";import"../../timeStamps-0NhGikBN.js";window.PUBLIC_PATH="/karten/";const o=new g.Map({container:"map",center:[9.1798,48.7759],zoom:window.innerWidth<577?12.5:14.5,minZoom:6,attributionControl:!1}),$={type:"geojson",data:"/karten_geojsons/maps/map-as-a-service/datenspaziergang/shapesStuttgart.geojson"},E={type:"geojson",data:"/karten_geojsons/maps/map-as-a-service/datenspaziergang/route.geojson"},O={type:"geojson",data:"/karten_geojsons/maps/map-as-a-service/datenspaziergang/stations.geojson"},G=[{id:"route",type:"line",source:"sourceRoute",color:"black",lineWidth:["interpolate",["linear"],["zoom"],14,3,20,5]}],d=[{id:"stations",source:"sourceStations",color:"black",circleRadius:6,circleOpacity:1}];function I(a){const{Name:e,Location:r}=a;return'<table>                <tr>                    <th class="title">'+e+'</th>                </tr>            </table><br><table>                <tr>                    <td class="attContent">'+r+"</td>                </tr>            </table>"}function M(a){const e={collapsed:!1,layers:y(n,"Datenspaziergang Stuttgart","group")},r=new h(e);r._exclusiveAllGroups=!0,a.addControl(r,"top-right")}let m,n;window.addEventListener("DOMContentLoaded",()=>{D(o),C(o),S(o),o.on("load",()=>{o.addSource("shape",$),o.addLayer(f),o.addLayer(b),[{id:"sourceRoute",source:E},{id:"sourceStations",source:O},{id:"sourceChargePoints",source:k},{id:"sourceSharingVehicles",source:P},{id:"sourceSharingStationsScooter",source:v},{id:"sourceSharingStationsCar",source:w},{id:"sourceCountBicycle",source:z},{id:"sourceParkApiBicycle",source:A}].forEach(e=>j(o,e)),m=[...G,...d],i(o,...m),n=[...c,...l,...t,...u,...R],n.forEach(e=>{e.source!="sourceChargePoints"?e.visibility="none":e.visibility="visible",i(o,e)}),M(o),s(o,d,I),s(o,c,L),s(o,l,p),s(o,u,p),s(o,t,B),s(o,t,_)})});
